{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1q_82jFQmPIYvbwdZt883ssZJ9MKxxxZ3","timestamp":1694611486272}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","source":["This project contains a work that is use Random Forest and Logistic Regression algorithms to forecast employee attrition within a human resources dataset. The dataset comprised various features such as age, daily rate, job satisfaction, and years of service, among others. By leveraging machine learning techniques, I aimed to identify patterns and factors contributing to employee turnover. This project is providing detailed insights into the methodology, data analysis, model implementation, and results"],"metadata":{"id":"FXRThF7XJtHS"}},{"cell_type":"markdown","metadata":{"id":"uAE6Icc0uylP"},"source":["# Importing Dataset and Dependencies\n"]},{"cell_type":"code","metadata":{"id":"YBp2qDPb8pDo","executionInfo":{"status":"ok","timestamp":1713308027758,"user_tz":-180,"elapsed":2109,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}}},"source":["import pandas as pd\n","import numpy as np\n","import seaborn as sns\n","import matplotlib.pyplot as plt"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"5P_ciLXawMZg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713308047252,"user_tz":-180,"elapsed":19498,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"303255da-8657-4d39-cf8f-7038ea21ef78"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"tjIiJdM4u1IE","executionInfo":{"status":"ok","timestamp":1713308047854,"user_tz":-180,"elapsed":604,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}}},"source":["# Reading the csv file of dataset\n","employee_df =pd.read_csv('/content/drive/MyDrive/Data Science for Business Package/1. Human Resources Data/Human_Resources.csv')"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"q4_wPDKCu5Uc","colab":{"base_uri":"https://localhost:8080/","height":582},"executionInfo":{"status":"ok","timestamp":1713308048398,"user_tz":-180,"elapsed":545,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"b8279120-81a3-48f3-f772-20261981d32e"},"source":["employee_df"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Age Attrition     BusinessTravel  DailyRate              Department  \\\n","0      41       Yes      Travel_Rarely       1102                   Sales   \n","1      49        No  Travel_Frequently        279  Research & Development   \n","2      37       Yes      Travel_Rarely       1373  Research & Development   \n","3      33        No  Travel_Frequently       1392  Research & Development   \n","4      27        No      Travel_Rarely        591  Research & Development   \n","...   ...       ...                ...        ...                     ...   \n","1465   36        No  Travel_Frequently        884  Research & Development   \n","1466   39        No      Travel_Rarely        613  Research & Development   \n","1467   27        No      Travel_Rarely        155  Research & Development   \n","1468   49        No  Travel_Frequently       1023                   Sales   \n","1469   34        No      Travel_Rarely        628  Research & Development   \n","\n","      DistanceFromHome  Education EducationField  EmployeeCount  \\\n","0                    1          2  Life Sciences              1   \n","1                    8          1  Life Sciences              1   \n","2                    2          2          Other              1   \n","3                    3          4  Life Sciences              1   \n","4                    2          1        Medical              1   \n","...                ...        ...            ...            ...   \n","1465                23          2        Medical              1   \n","1466                 6          1        Medical              1   \n","1467                 4          3  Life Sciences              1   \n","1468                 2          3        Medical              1   \n","1469                 8          3        Medical              1   \n","\n","      EmployeeNumber  ...  RelationshipSatisfaction StandardHours  \\\n","0                  1  ...                         1            80   \n","1                  2  ...                         4            80   \n","2                  4  ...                         2            80   \n","3                  5  ...                         3            80   \n","4                  7  ...                         4            80   \n","...              ...  ...                       ...           ...   \n","1465            2061  ...                         3            80   \n","1466            2062  ...                         1            80   \n","1467            2064  ...                         2            80   \n","1468            2065  ...                         4            80   \n","1469            2068  ...                         1            80   \n","\n","      StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n","0                    0                  8                      0   \n","1                    1                 10                      3   \n","2                    0                  7                      3   \n","3                    0                  8                      3   \n","4                    1                  6                      3   \n","...                ...                ...                    ...   \n","1465                 1                 17                      3   \n","1466                 1                  9                      5   \n","1467                 1                  6                      0   \n","1468                 0                 17                      3   \n","1469                 0                  6                      3   \n","\n","     WorkLifeBalance  YearsAtCompany YearsInCurrentRole  \\\n","0                  1               6                  4   \n","1                  3              10                  7   \n","2                  3               0                  0   \n","3                  3               8                  7   \n","4                  3               2                  2   \n","...              ...             ...                ...   \n","1465               3               5                  2   \n","1466               3               7                  7   \n","1467               3               6                  2   \n","1468               2               9                  6   \n","1469               4               4                  3   \n","\n","      YearsSinceLastPromotion  YearsWithCurrManager  \n","0                           0                     5  \n","1                           1                     7  \n","2                           0                     0  \n","3                           3                     0  \n","4                           2                     2  \n","...                       ...                   ...  \n","1465                        0                     3  \n","1466                        1                     7  \n","1467                        0                     3  \n","1468                        0                     8  \n","1469                        1                     2  \n","\n","[1470 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-be52fad8-1a35-4bae-8547-6538b3d18a4c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>BusinessTravel</th>\n","      <th>DailyRate</th>\n","      <th>Department</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EducationField</th>\n","      <th>EmployeeCount</th>\n","      <th>EmployeeNumber</th>\n","      <th>...</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StandardHours</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>Yes</td>\n","      <td>Travel_Rarely</td>\n","      <td>1102</td>\n","      <td>Sales</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>279</td>\n","      <td>Research &amp; Development</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>Yes</td>\n","      <td>Travel_Rarely</td>\n","      <td>1373</td>\n","      <td>Research &amp; Development</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>1392</td>\n","      <td>Research &amp; Development</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>591</td>\n","      <td>Research &amp; Development</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>36</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>884</td>\n","      <td>Research &amp; Development</td>\n","      <td>23</td>\n","      <td>2</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2061</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>39</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>613</td>\n","      <td>Research &amp; Development</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2062</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>27</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>155</td>\n","      <td>Research &amp; Development</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>2064</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>49</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>1023</td>\n","      <td>Sales</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2065</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>34</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>628</td>\n","      <td>Research &amp; Development</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2068</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-be52fad8-1a35-4bae-8547-6538b3d18a4c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-be52fad8-1a35-4bae-8547-6538b3d18a4c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-be52fad8-1a35-4bae-8547-6538b3d18a4c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-422e7987-3b05-4fdb-b944-3bd9d863f92d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-422e7987-3b05-4fdb-b944-3bd9d863f92d')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-422e7987-3b05-4fdb-b944-3bd9d863f92d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_788f0722-c8a9-4967-b71a-c05c4d9b47ac\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('employee_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_788f0722-c8a9-4967-b71a-c05c4d9b47ac button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('employee_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"employee_df"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","metadata":{"id":"E7puy9-xxS4A","colab":{"base_uri":"https://localhost:8080/","height":325},"executionInfo":{"status":"ok","timestamp":1713308048398,"user_tz":-180,"elapsed":9,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"93065b64-fc33-4c1f-b746-e28e53594776"},"source":["employee_df.head(5)"],"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Age Attrition     BusinessTravel  DailyRate              Department  \\\n","0   41       Yes      Travel_Rarely       1102                   Sales   \n","1   49        No  Travel_Frequently        279  Research & Development   \n","2   37       Yes      Travel_Rarely       1373  Research & Development   \n","3   33        No  Travel_Frequently       1392  Research & Development   \n","4   27        No      Travel_Rarely        591  Research & Development   \n","\n","   DistanceFromHome  Education EducationField  EmployeeCount  EmployeeNumber  \\\n","0                 1          2  Life Sciences              1               1   \n","1                 8          1  Life Sciences              1               2   \n","2                 2          2          Other              1               4   \n","3                 3          4  Life Sciences              1               5   \n","4                 2          1        Medical              1               7   \n","\n","   ...  RelationshipSatisfaction StandardHours  StockOptionLevel  \\\n","0  ...                         1            80                 0   \n","1  ...                         4            80                 1   \n","2  ...                         2            80                 0   \n","3  ...                         3            80                 0   \n","4  ...                         4            80                 1   \n","\n","   TotalWorkingYears  TrainingTimesLastYear WorkLifeBalance  YearsAtCompany  \\\n","0                  8                      0               1               6   \n","1                 10                      3               3              10   \n","2                  7                      3               3               0   \n","3                  8                      3               3               8   \n","4                  6                      3               3               2   \n","\n","  YearsInCurrentRole  YearsSinceLastPromotion  YearsWithCurrManager  \n","0                  4                        0                     5  \n","1                  7                        1                     7  \n","2                  0                        0                     0  \n","3                  7                        3                     0  \n","4                  2                        2                     2  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-e18098f9-17c3-4609-b068-74ee445a2aa3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>BusinessTravel</th>\n","      <th>DailyRate</th>\n","      <th>Department</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EducationField</th>\n","      <th>EmployeeCount</th>\n","      <th>EmployeeNumber</th>\n","      <th>...</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StandardHours</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>Yes</td>\n","      <td>Travel_Rarely</td>\n","      <td>1102</td>\n","      <td>Sales</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>279</td>\n","      <td>Research &amp; Development</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>Yes</td>\n","      <td>Travel_Rarely</td>\n","      <td>1373</td>\n","      <td>Research &amp; Development</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>Other</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>1392</td>\n","      <td>Research &amp; Development</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>591</td>\n","      <td>Research &amp; Development</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e18098f9-17c3-4609-b068-74ee445a2aa3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e18098f9-17c3-4609-b068-74ee445a2aa3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e18098f9-17c3-4609-b068-74ee445a2aa3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-24dce7c7-f29c-491c-bacd-f3d4aca08dc1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-24dce7c7-f29c-491c-bacd-f3d4aca08dc1')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-24dce7c7-f29c-491c-bacd-f3d4aca08dc1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"employee_df"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"RUt2ON_UxyYk","colab":{"base_uri":"https://localhost:8080/","height":325},"executionInfo":{"status":"ok","timestamp":1713308048398,"user_tz":-180,"elapsed":8,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"e4dc4489-5706-4310-a2a7-fd88c25c3254"},"source":["employee_df.tail(5)"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Age Attrition     BusinessTravel  DailyRate              Department  \\\n","1465   36        No  Travel_Frequently        884  Research & Development   \n","1466   39        No      Travel_Rarely        613  Research & Development   \n","1467   27        No      Travel_Rarely        155  Research & Development   \n","1468   49        No  Travel_Frequently       1023                   Sales   \n","1469   34        No      Travel_Rarely        628  Research & Development   \n","\n","      DistanceFromHome  Education EducationField  EmployeeCount  \\\n","1465                23          2        Medical              1   \n","1466                 6          1        Medical              1   \n","1467                 4          3  Life Sciences              1   \n","1468                 2          3        Medical              1   \n","1469                 8          3        Medical              1   \n","\n","      EmployeeNumber  ...  RelationshipSatisfaction StandardHours  \\\n","1465            2061  ...                         3            80   \n","1466            2062  ...                         1            80   \n","1467            2064  ...                         2            80   \n","1468            2065  ...                         4            80   \n","1469            2068  ...                         1            80   \n","\n","      StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n","1465                 1                 17                      3   \n","1466                 1                  9                      5   \n","1467                 1                  6                      0   \n","1468                 0                 17                      3   \n","1469                 0                  6                      3   \n","\n","     WorkLifeBalance  YearsAtCompany YearsInCurrentRole  \\\n","1465               3               5                  2   \n","1466               3               7                  7   \n","1467               3               6                  2   \n","1468               2               9                  6   \n","1469               4               4                  3   \n","\n","      YearsSinceLastPromotion  YearsWithCurrManager  \n","1465                        0                     3  \n","1466                        1                     7  \n","1467                        0                     3  \n","1468                        0                     8  \n","1469                        1                     2  \n","\n","[5 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-558ad166-fe81-4e4c-87ec-59b89dce901d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>BusinessTravel</th>\n","      <th>DailyRate</th>\n","      <th>Department</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EducationField</th>\n","      <th>EmployeeCount</th>\n","      <th>EmployeeNumber</th>\n","      <th>...</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StandardHours</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1465</th>\n","      <td>36</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>884</td>\n","      <td>Research &amp; Development</td>\n","      <td>23</td>\n","      <td>2</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2061</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>39</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>613</td>\n","      <td>Research &amp; Development</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2062</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>27</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>155</td>\n","      <td>Research &amp; Development</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>Life Sciences</td>\n","      <td>1</td>\n","      <td>2064</td>\n","      <td>...</td>\n","      <td>2</td>\n","      <td>80</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>49</td>\n","      <td>No</td>\n","      <td>Travel_Frequently</td>\n","      <td>1023</td>\n","      <td>Sales</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2065</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>34</td>\n","      <td>No</td>\n","      <td>Travel_Rarely</td>\n","      <td>628</td>\n","      <td>Research &amp; Development</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>Medical</td>\n","      <td>1</td>\n","      <td>2068</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>80</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-558ad166-fe81-4e4c-87ec-59b89dce901d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-558ad166-fe81-4e4c-87ec-59b89dce901d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-558ad166-fe81-4e4c-87ec-59b89dce901d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cd8c1942-77f6-4ba0-8683-9b5237c8a883\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cd8c1942-77f6-4ba0-8683-9b5237c8a883')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cd8c1942-77f6-4ba0-8683-9b5237c8a883 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"hMq3-KWOx0e1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713308048398,"user_tz":-180,"elapsed":8,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"f0453c8f-b5b0-4a72-a55b-15c7787c1ff9"},"source":["employee_df.info()"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1470 entries, 0 to 1469\n","Data columns (total 35 columns):\n"," #   Column                    Non-Null Count  Dtype \n","---  ------                    --------------  ----- \n"," 0   Age                       1470 non-null   int64 \n"," 1   Attrition                 1470 non-null   object\n"," 2   BusinessTravel            1470 non-null   object\n"," 3   DailyRate                 1470 non-null   int64 \n"," 4   Department                1470 non-null   object\n"," 5   DistanceFromHome          1470 non-null   int64 \n"," 6   Education                 1470 non-null   int64 \n"," 7   EducationField            1470 non-null   object\n"," 8   EmployeeCount             1470 non-null   int64 \n"," 9   EmployeeNumber            1470 non-null   int64 \n"," 10  EnvironmentSatisfaction   1470 non-null   int64 \n"," 11  Gender                    1470 non-null   object\n"," 12  HourlyRate                1470 non-null   int64 \n"," 13  JobInvolvement            1470 non-null   int64 \n"," 14  JobLevel                  1470 non-null   int64 \n"," 15  JobRole                   1470 non-null   object\n"," 16  JobSatisfaction           1470 non-null   int64 \n"," 17  MaritalStatus             1470 non-null   object\n"," 18  MonthlyIncome             1470 non-null   int64 \n"," 19  MonthlyRate               1470 non-null   int64 \n"," 20  NumCompaniesWorked        1470 non-null   int64 \n"," 21  Over18                    1470 non-null   object\n"," 22  OverTime                  1470 non-null   object\n"," 23  PercentSalaryHike         1470 non-null   int64 \n"," 24  PerformanceRating         1470 non-null   int64 \n"," 25  RelationshipSatisfaction  1470 non-null   int64 \n"," 26  StandardHours             1470 non-null   int64 \n"," 27  StockOptionLevel          1470 non-null   int64 \n"," 28  TotalWorkingYears         1470 non-null   int64 \n"," 29  TrainingTimesLastYear     1470 non-null   int64 \n"," 30  WorkLifeBalance           1470 non-null   int64 \n"," 31  YearsAtCompany            1470 non-null   int64 \n"," 32  YearsInCurrentRole        1470 non-null   int64 \n"," 33  YearsSinceLastPromotion   1470 non-null   int64 \n"," 34  YearsWithCurrManager      1470 non-null   int64 \n","dtypes: int64(26), object(9)\n","memory usage: 402.1+ KB\n"]}]},{"cell_type":"markdown","metadata":{"id":"LlszUhNNyrl_"},"source":["# Visualization"]},{"cell_type":"code","metadata":{"id":"ZiVkQqEPMDDD","executionInfo":{"status":"ok","timestamp":1713308048682,"user_tz":-180,"elapsed":2,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}}},"source":["# Let's replace 'Attritition' , 'overtime' , 'Over18' column with integers rather than Yes or No before performing any visualizations\n","employee_df['Attrition'] = employee_df['Attrition'].apply(lambda x: 1 if x == 'Yes' else 0)\n","employee_df['OverTime'] = employee_df['OverTime'].apply(lambda x: 1 if x == 'Yes' else 0)\n","employee_df['Over18'] = employee_df['Over18'].apply(lambda x: 1 if x == 'Y' else 0)"],"execution_count":8,"outputs":[]},{"cell_type":"code","source":["employee_df.isnull()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":443},"id":"liNs3Ae8HYD4","executionInfo":{"status":"ok","timestamp":1713308073213,"user_tz":-180,"elapsed":452,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"b9f1d34b-2af0-4a95-d1db-abf8f869aa0e"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        Age  Attrition  BusinessTravel  DailyRate  Department  \\\n","0     False      False           False      False       False   \n","1     False      False           False      False       False   \n","2     False      False           False      False       False   \n","3     False      False           False      False       False   \n","4     False      False           False      False       False   \n","...     ...        ...             ...        ...         ...   \n","1465  False      False           False      False       False   \n","1466  False      False           False      False       False   \n","1467  False      False           False      False       False   \n","1468  False      False           False      False       False   \n","1469  False      False           False      False       False   \n","\n","      DistanceFromHome  Education  EducationField  EmployeeCount  \\\n","0                False      False           False          False   \n","1                False      False           False          False   \n","2                False      False           False          False   \n","3                False      False           False          False   \n","4                False      False           False          False   \n","...                ...        ...             ...            ...   \n","1465             False      False           False          False   \n","1466             False      False           False          False   \n","1467             False      False           False          False   \n","1468             False      False           False          False   \n","1469             False      False           False          False   \n","\n","      EmployeeNumber  ...  RelationshipSatisfaction  StandardHours  \\\n","0              False  ...                     False          False   \n","1              False  ...                     False          False   \n","2              False  ...                     False          False   \n","3              False  ...                     False          False   \n","4              False  ...                     False          False   \n","...              ...  ...                       ...            ...   \n","1465           False  ...                     False          False   \n","1466           False  ...                     False          False   \n","1467           False  ...                     False          False   \n","1468           False  ...                     False          False   \n","1469           False  ...                     False          False   \n","\n","      StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n","0                False              False                  False   \n","1                False              False                  False   \n","2                False              False                  False   \n","3                False              False                  False   \n","4                False              False                  False   \n","...                ...                ...                    ...   \n","1465             False              False                  False   \n","1466             False              False                  False   \n","1467             False              False                  False   \n","1468             False              False                  False   \n","1469             False              False                  False   \n","\n","      WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n","0               False           False               False   \n","1               False           False               False   \n","2               False           False               False   \n","3               False           False               False   \n","4               False           False               False   \n","...               ...             ...                 ...   \n","1465            False           False               False   \n","1466            False           False               False   \n","1467            False           False               False   \n","1468            False           False               False   \n","1469            False           False               False   \n","\n","      YearsSinceLastPromotion  YearsWithCurrManager  \n","0                       False                 False  \n","1                       False                 False  \n","2                       False                 False  \n","3                       False                 False  \n","4                       False                 False  \n","...                       ...                   ...  \n","1465                    False                 False  \n","1466                    False                 False  \n","1467                    False                 False  \n","1468                    False                 False  \n","1469                    False                 False  \n","\n","[1470 rows x 35 columns]"],"text/html":["\n","  <div id=\"df-cf497401-8eab-4916-abff-2d778f7c83c0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>BusinessTravel</th>\n","      <th>DailyRate</th>\n","      <th>Department</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EducationField</th>\n","      <th>EmployeeCount</th>\n","      <th>EmployeeNumber</th>\n","      <th>...</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StandardHours</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>...</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 35 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf497401-8eab-4916-abff-2d778f7c83c0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf497401-8eab-4916-abff-2d778f7c83c0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf497401-8eab-4916-abff-2d778f7c83c0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-51c67265-d97b-469a-b826-ed03a9e6ea89\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51c67265-d97b-469a-b826-ed03a9e6ea89')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-51c67265-d97b-469a-b826-ed03a9e6ea89 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"BfDQRuNj4_b8","executionInfo":{"status":"ok","timestamp":1713308197597,"user_tz":-180,"elapsed":327,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}}},"source":["# drop 'EmployeeCount' , 'Standardhours' and 'Over18' since they do not change from one employee to the other\n","employee_df.drop(['EmployeeCount', 'StandardHours', 'Over18', 'EmployeeNumber'], axis=1, inplace=True)"],"execution_count":12,"outputs":[]},{"cell_type":"code","metadata":{"id":"-5qvu70o5oAI","executionInfo":{"status":"ok","timestamp":1713308202193,"user_tz":-180,"elapsed":267,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}}},"source":["# Let's see how many employees left the company!\n","left_df        = employee_df[employee_df['Attrition'] == 1]\n","stayed_df      = employee_df[employee_df['Attrition'] == 0]"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"uBDltyUy5o1L","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1713308204641,"user_tz":-180,"elapsed":2,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"2cc95bdd-3f9e-44b7-eb3d-c8ce643f0b6e"},"source":["# Count the number of employees who stayed and left\n","# It seems that we are dealing with an imbalanced dataset\n","print(\"Total =\", len(employee_df))\n","\n","print(\"Number of employees who left the company =\", len(left_df))\n","print(\"Percentage of employees who left the company =\", 1.*len(left_df)/len(employee_df)*100.0, \"%\")\n","\n","print(\"Number of employees who did not leave the company (stayed) =\", len(stayed_df))\n","print(\"Percentage of employees who did not leave the company (stayed) =\", 1.*len(stayed_df)/len(employee_df)*100.0, \"%\")"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Total = 1470\n","Number of employees who left the company = 237\n","Percentage of employees who left the company = 16.122448979591837 %\n","Number of employees who did not leave the company (stayed) = 1233\n","Percentage of employees who did not leave the company (stayed) = 83.87755102040816 %\n"]}]},{"cell_type":"code","metadata":{"id":"B5SXd3txxv7V","colab":{"base_uri":"https://localhost:8080/","height":349},"executionInfo":{"status":"ok","timestamp":1713308218548,"user_tz":-180,"elapsed":545,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"074f81f0-fdd1-4b90-d189-c9ef720b86ed"},"source":["left_df.describe()\n","\n","# 'age': mean age of the employees who stayed is higher compared to who left\n","# 'DailyRate': Rate of employees who stayed is higher\n","# 'DistanceFromHome': Employees who stayed live closer to home\n","# 'EnvironmentSatisfaction' & 'JobSatisfaction': Employees who stayed are generally more satisifed with their jobs\n","# 'StockOptionLevel': Employees who stayed tend to have higher stock option level"],"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Age  Attrition    DailyRate  DistanceFromHome   Education  \\\n","count  237.000000      237.0   237.000000        237.000000  237.000000   \n","mean    33.607595        1.0   750.362869         10.632911    2.839662   \n","std      9.689350        0.0   401.899519          8.452525    1.008244   \n","min     18.000000        1.0   103.000000          1.000000    1.000000   \n","25%     28.000000        1.0   408.000000          3.000000    2.000000   \n","50%     32.000000        1.0   699.000000          9.000000    3.000000   \n","75%     39.000000        1.0  1092.000000         17.000000    4.000000   \n","max     58.000000        1.0  1496.000000         29.000000    5.000000   \n","\n","       EnvironmentSatisfaction  HourlyRate  JobInvolvement    JobLevel  \\\n","count               237.000000  237.000000      237.000000  237.000000   \n","mean                  2.464135   65.573840        2.518987    1.637131   \n","std                   1.169791   20.099958        0.773405    0.940594   \n","min                   1.000000   31.000000        1.000000    1.000000   \n","25%                   1.000000   50.000000        2.000000    1.000000   \n","50%                   3.000000   66.000000        3.000000    1.000000   \n","75%                   4.000000   84.000000        3.000000    2.000000   \n","max                   4.000000  100.000000        4.000000    5.000000   \n","\n","       JobSatisfaction  ...  PerformanceRating  RelationshipSatisfaction  \\\n","count       237.000000  ...         237.000000                237.000000   \n","mean          2.468354  ...           3.156118                  2.599156   \n","std           1.118058  ...           0.363735                  1.125437   \n","min           1.000000  ...           3.000000                  1.000000   \n","25%           1.000000  ...           3.000000                  2.000000   \n","50%           3.000000  ...           3.000000                  3.000000   \n","75%           3.000000  ...           3.000000                  4.000000   \n","max           4.000000  ...           4.000000                  4.000000   \n","\n","       StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n","count        237.000000         237.000000             237.000000   \n","mean           0.527426           8.244726               2.624473   \n","std            0.856361           7.169204               1.254784   \n","min            0.000000           0.000000               0.000000   \n","25%            0.000000           3.000000               2.000000   \n","50%            0.000000           7.000000               2.000000   \n","75%            1.000000          10.000000               3.000000   \n","max            3.000000          40.000000               6.000000   \n","\n","       WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n","count       237.000000      237.000000          237.000000   \n","mean          2.658228        5.130802            2.902954   \n","std           0.816453        5.949984            3.174827   \n","min           1.000000        0.000000            0.000000   \n","25%           2.000000        1.000000            0.000000   \n","50%           3.000000        3.000000            2.000000   \n","75%           3.000000        7.000000            4.000000   \n","max           4.000000       40.000000           15.000000   \n","\n","       YearsSinceLastPromotion  YearsWithCurrManager  \n","count               237.000000            237.000000  \n","mean                  1.945148              2.852321  \n","std                   3.153077              3.143349  \n","min                   0.000000              0.000000  \n","25%                   0.000000              0.000000  \n","50%                   1.000000              2.000000  \n","75%                   2.000000              5.000000  \n","max                  15.000000             14.000000  \n","\n","[8 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-d2c5ce1d-c63a-4fa3-b565-0a8e924e834c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>DailyRate</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EnvironmentSatisfaction</th>\n","      <th>HourlyRate</th>\n","      <th>JobInvolvement</th>\n","      <th>JobLevel</th>\n","      <th>JobSatisfaction</th>\n","      <th>...</th>\n","      <th>PerformanceRating</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>237.000000</td>\n","      <td>237.0</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>...</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","      <td>237.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>33.607595</td>\n","      <td>1.0</td>\n","      <td>750.362869</td>\n","      <td>10.632911</td>\n","      <td>2.839662</td>\n","      <td>2.464135</td>\n","      <td>65.573840</td>\n","      <td>2.518987</td>\n","      <td>1.637131</td>\n","      <td>2.468354</td>\n","      <td>...</td>\n","      <td>3.156118</td>\n","      <td>2.599156</td>\n","      <td>0.527426</td>\n","      <td>8.244726</td>\n","      <td>2.624473</td>\n","      <td>2.658228</td>\n","      <td>5.130802</td>\n","      <td>2.902954</td>\n","      <td>1.945148</td>\n","      <td>2.852321</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>9.689350</td>\n","      <td>0.0</td>\n","      <td>401.899519</td>\n","      <td>8.452525</td>\n","      <td>1.008244</td>\n","      <td>1.169791</td>\n","      <td>20.099958</td>\n","      <td>0.773405</td>\n","      <td>0.940594</td>\n","      <td>1.118058</td>\n","      <td>...</td>\n","      <td>0.363735</td>\n","      <td>1.125437</td>\n","      <td>0.856361</td>\n","      <td>7.169204</td>\n","      <td>1.254784</td>\n","      <td>0.816453</td>\n","      <td>5.949984</td>\n","      <td>3.174827</td>\n","      <td>3.153077</td>\n","      <td>3.143349</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>1.0</td>\n","      <td>103.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>31.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>28.000000</td>\n","      <td>1.0</td>\n","      <td>408.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>50.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>32.000000</td>\n","      <td>1.0</td>\n","      <td>699.000000</td>\n","      <td>9.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>66.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>0.000000</td>\n","      <td>7.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>39.000000</td>\n","      <td>1.0</td>\n","      <td>1092.000000</td>\n","      <td>17.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>84.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>10.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","      <td>4.000000</td>\n","      <td>2.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>58.000000</td>\n","      <td>1.0</td>\n","      <td>1496.000000</td>\n","      <td>29.000000</td>\n","      <td>5.000000</td>\n","      <td>4.000000</td>\n","      <td>100.000000</td>\n","      <td>4.000000</td>\n","      <td>5.000000</td>\n","      <td>4.000000</td>\n","      <td>...</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>3.000000</td>\n","      <td>40.000000</td>\n","      <td>6.000000</td>\n","      <td>4.000000</td>\n","      <td>40.000000</td>\n","      <td>15.000000</td>\n","      <td>15.000000</td>\n","      <td>14.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d2c5ce1d-c63a-4fa3-b565-0a8e924e834c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d2c5ce1d-c63a-4fa3-b565-0a8e924e834c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d2c5ce1d-c63a-4fa3-b565-0a8e924e834c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-860c7469-a8d5-4501-90c7-4f811fad04bc\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-860c7469-a8d5-4501-90c7-4f811fad04bc')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-860c7469-a8d5-4501-90c7-4f811fad04bc button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","metadata":{"id":"nPPQHIxyx7YZ","colab":{"base_uri":"https://localhost:8080/","height":349},"executionInfo":{"status":"ok","timestamp":1713308233162,"user_tz":-180,"elapsed":282,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"2d03592e-0212-4b75-aaff-172cb67fd349"},"source":["stayed_df.describe()"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["               Age  Attrition    DailyRate  DistanceFromHome    Education  \\\n","count  1233.000000     1233.0  1233.000000       1233.000000  1233.000000   \n","mean     37.561233        0.0   812.504461          8.915653     2.927007   \n","std       8.888360        0.0   403.208379          8.012633     1.027002   \n","min      18.000000        0.0   102.000000          1.000000     1.000000   \n","25%      31.000000        0.0   477.000000          2.000000     2.000000   \n","50%      36.000000        0.0   817.000000          7.000000     3.000000   \n","75%      43.000000        0.0  1176.000000         13.000000     4.000000   \n","max      60.000000        0.0  1499.000000         29.000000     5.000000   \n","\n","       EnvironmentSatisfaction   HourlyRate  JobInvolvement     JobLevel  \\\n","count              1233.000000  1233.000000     1233.000000  1233.000000   \n","mean                  2.771290    65.952149        2.770479     2.145985   \n","std                   1.071132    20.380754        0.692050     1.117933   \n","min                   1.000000    30.000000        1.000000     1.000000   \n","25%                   2.000000    48.000000        2.000000     1.000000   \n","50%                   3.000000    66.000000        3.000000     2.000000   \n","75%                   4.000000    83.000000        3.000000     3.000000   \n","max                   4.000000   100.000000        4.000000     5.000000   \n","\n","       JobSatisfaction  ...  PerformanceRating  RelationshipSatisfaction  \\\n","count      1233.000000  ...        1233.000000               1233.000000   \n","mean          2.778589  ...           3.153285                  2.733982   \n","std           1.093277  ...           0.360408                  1.071603   \n","min           1.000000  ...           3.000000                  1.000000   \n","25%           2.000000  ...           3.000000                  2.000000   \n","50%           3.000000  ...           3.000000                  3.000000   \n","75%           4.000000  ...           3.000000                  4.000000   \n","max           4.000000  ...           4.000000                  4.000000   \n","\n","       StockOptionLevel  TotalWorkingYears  TrainingTimesLastYear  \\\n","count       1233.000000        1233.000000            1233.000000   \n","mean           0.845093          11.862936               2.832928   \n","std            0.841985           7.760719               1.293585   \n","min            0.000000           0.000000               0.000000   \n","25%            0.000000           6.000000               2.000000   \n","50%            1.000000          10.000000               3.000000   \n","75%            1.000000          16.000000               3.000000   \n","max            3.000000          38.000000               6.000000   \n","\n","       WorkLifeBalance  YearsAtCompany  YearsInCurrentRole  \\\n","count      1233.000000     1233.000000         1233.000000   \n","mean          2.781022        7.369019            4.484185   \n","std           0.681907        6.096298            3.649402   \n","min           1.000000        0.000000            0.000000   \n","25%           2.000000        3.000000            2.000000   \n","50%           3.000000        6.000000            3.000000   \n","75%           3.000000       10.000000            7.000000   \n","max           4.000000       37.000000           18.000000   \n","\n","       YearsSinceLastPromotion  YearsWithCurrManager  \n","count              1233.000000           1233.000000  \n","mean                  2.234388              4.367397  \n","std                   3.234762              3.594116  \n","min                   0.000000              0.000000  \n","25%                   0.000000              2.000000  \n","50%                   1.000000              3.000000  \n","75%                   3.000000              7.000000  \n","max                  15.000000             17.000000  \n","\n","[8 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-e52db0b4-9041-4cc7-bfad-a4f2f89042d0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>Attrition</th>\n","      <th>DailyRate</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EnvironmentSatisfaction</th>\n","      <th>HourlyRate</th>\n","      <th>JobInvolvement</th>\n","      <th>JobLevel</th>\n","      <th>JobSatisfaction</th>\n","      <th>...</th>\n","      <th>PerformanceRating</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1233.000000</td>\n","      <td>1233.0</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>...</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","      <td>1233.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>37.561233</td>\n","      <td>0.0</td>\n","      <td>812.504461</td>\n","      <td>8.915653</td>\n","      <td>2.927007</td>\n","      <td>2.771290</td>\n","      <td>65.952149</td>\n","      <td>2.770479</td>\n","      <td>2.145985</td>\n","      <td>2.778589</td>\n","      <td>...</td>\n","      <td>3.153285</td>\n","      <td>2.733982</td>\n","      <td>0.845093</td>\n","      <td>11.862936</td>\n","      <td>2.832928</td>\n","      <td>2.781022</td>\n","      <td>7.369019</td>\n","      <td>4.484185</td>\n","      <td>2.234388</td>\n","      <td>4.367397</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>8.888360</td>\n","      <td>0.0</td>\n","      <td>403.208379</td>\n","      <td>8.012633</td>\n","      <td>1.027002</td>\n","      <td>1.071132</td>\n","      <td>20.380754</td>\n","      <td>0.692050</td>\n","      <td>1.117933</td>\n","      <td>1.093277</td>\n","      <td>...</td>\n","      <td>0.360408</td>\n","      <td>1.071603</td>\n","      <td>0.841985</td>\n","      <td>7.760719</td>\n","      <td>1.293585</td>\n","      <td>0.681907</td>\n","      <td>6.096298</td>\n","      <td>3.649402</td>\n","      <td>3.234762</td>\n","      <td>3.594116</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>18.000000</td>\n","      <td>0.0</td>\n","      <td>102.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>30.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>31.000000</td>\n","      <td>0.0</td>\n","      <td>477.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>48.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>6.000000</td>\n","      <td>2.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>36.000000</td>\n","      <td>0.0</td>\n","      <td>817.000000</td>\n","      <td>7.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>66.000000</td>\n","      <td>3.000000</td>\n","      <td>2.000000</td>\n","      <td>3.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>10.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>6.000000</td>\n","      <td>3.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>43.000000</td>\n","      <td>0.0</td>\n","      <td>1176.000000</td>\n","      <td>13.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>83.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>4.000000</td>\n","      <td>...</td>\n","      <td>3.000000</td>\n","      <td>4.000000</td>\n","      <td>1.000000</td>\n","      <td>16.000000</td>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>10.000000</td>\n","      <td>7.000000</td>\n","      <td>3.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>60.000000</td>\n","      <td>0.0</td>\n","      <td>1499.000000</td>\n","      <td>29.000000</td>\n","      <td>5.000000</td>\n","      <td>4.000000</td>\n","      <td>100.000000</td>\n","      <td>4.000000</td>\n","      <td>5.000000</td>\n","      <td>4.000000</td>\n","      <td>...</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>6.000000</td>\n","      <td>4.000000</td>\n","      <td>37.000000</td>\n","      <td>18.000000</td>\n","      <td>15.000000</td>\n","      <td>17.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e52db0b4-9041-4cc7-bfad-a4f2f89042d0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e52db0b4-9041-4cc7-bfad-a4f2f89042d0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e52db0b4-9041-4cc7-bfad-a4f2f89042d0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-628b092b-20fb-4af0-9605-ecea88570c24\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-628b092b-20fb-4af0-9605-ecea88570c24')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-628b092b-20fb-4af0-9605-ecea88570c24 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{},"execution_count":16}]},{"cell_type":"code","metadata":{"id":"c6UiAqTkKD85","colab":{"base_uri":"https://localhost:8080/","height":332},"executionInfo":{"status":"error","timestamp":1713308235749,"user_tz":-180,"elapsed":296,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"9c3422b5-0d2a-499c-b02b-0bddcfbbc055"},"source":["# Job level is strongly correlated with total working hours\n","# Monthly income is strongly correlated with Job level\n","# Monthly income is strongly correlated with total working hours\n","# Age is stongly correlated with monthly income\n","\n","correlations = employee_df.corr()\n","f, ax =plt.subplots(figsize = (20,20) )\n","sns.heatmap(correlations, annot = True)"],"execution_count":17,"outputs":[{"output_type":"error","ename":"ValueError","evalue":"could not convert string to float: 'Travel_Rarely'","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","\u001b[0;32m<ipython-input-17-bc8c9a333e42>\u001b[0m in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mcorrelations\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0memployee_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcorr\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mf\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0max\u001b[0m \u001b[0;34m=\u001b[0m\u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0msubplots\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mfigsize\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m(\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;36m20\u001b[0m\u001b[0;34m)\u001b[0m \u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0msns\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mheatmap\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mcorrelations\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mannot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mTrue\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mcorr\u001b[0;34m(self, method, min_periods, numeric_only)\u001b[0m\n\u001b[1;32m  10052\u001b[0m         \u001b[0mcols\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcolumns\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  10053\u001b[0m         \u001b[0midx\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mcols\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m> 10054\u001b[0;31m         \u001b[0mmat\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdata\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mto_numpy\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mfloat\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnan\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m  10055\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m  10056\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mmethod\u001b[0m \u001b[0;34m==\u001b[0m \u001b[0;34m\"pearson\"\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/frame.py\u001b[0m in \u001b[0;36mto_numpy\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1836\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0;32mNone\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1837\u001b[0m             \u001b[0mdtype\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1838\u001b[0;31m         \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_mgr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mas_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mcopy\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1839\u001b[0m         \u001b[0;32mif\u001b[0m \u001b[0mresult\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mdtype\u001b[0m \u001b[0;32mis\u001b[0m \u001b[0;32mnot\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1840\u001b[0m             \u001b[0mresult\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0marray\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mresult\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcopy\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;32mFalse\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36mas_array\u001b[0;34m(self, dtype, copy, na_value)\u001b[0m\n\u001b[1;32m   1730\u001b[0m                 \u001b[0marr\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mflags\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mwriteable\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;32mFalse\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1731\u001b[0m         \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1732\u001b[0;31m             \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_interleave\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mna_value\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mna_value\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1733\u001b[0m             \u001b[0;31m# The underlying data was copied within _interleave, so no need\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1734\u001b[0m             \u001b[0;31m# to further copy if copy=True or setting na_value\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;32m/usr/local/lib/python3.10/dist-packages/pandas/core/internals/managers.py\u001b[0m in \u001b[0;36m_interleave\u001b[0;34m(self, dtype, na_value)\u001b[0m\n\u001b[1;32m   1792\u001b[0m             \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1793\u001b[0m                 \u001b[0marr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mblk\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget_values\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mdtype\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m-> 1794\u001b[0;31m             \u001b[0mresult\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0marr\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m   1795\u001b[0m             \u001b[0mitemmask\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mrl\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mindexer\u001b[0m\u001b[0;34m]\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m1\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m   1796\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'Travel_Rarely'"]}]},{"cell_type":"code","metadata":{"id":"btcWqUnfPcxW","colab":{"base_uri":"https://localhost:8080/","height":878},"executionInfo":{"status":"ok","timestamp":1694601427730,"user_tz":-180,"elapsed":363,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"a67ad744-ef9f-4aee-aa6b-5509251266f4"},"source":["plt.figure(figsize = (25,12))\n","sns.countplot(x='Age', hue='Attrition',data=employee_df)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Age', ylabel='count'>"]},"metadata":{},"execution_count":57},{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x1200 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"jpJtiorsjgfI","colab":{"base_uri":"https://localhost:8080/","height":1000},"executionInfo":{"status":"ok","timestamp":1694601430071,"user_tz":-180,"elapsed":2344,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"266bada6-e2ac-4e21-a693-c4f6903ce395"},"source":["plt.figure(figsize=[20,20])\n","plt.subplot(411)\n","sns.countplot(x = 'JobRole', hue = 'Attrition', data = employee_df)\n","plt.subplot(412)\n","sns.countplot(x = 'MaritalStatus', hue = 'Attrition', data = employee_df)\n","plt.subplot(413)\n","sns.countplot(x = 'JobInvolvement', hue = 'Attrition', data = employee_df)\n","plt.subplot(414)\n","sns.countplot(x = 'JobLevel', hue = 'Attrition', data = employee_df)\n","\n","# Single employees tend to leave compared to married and divorced\n","# Sales Representitives tend to leave compared to any other job\n","# Less involved employees tend to leave the company\n","# Less experienced (low job level) tend to leave the company"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='JobLevel', ylabel='count'>"]},"metadata":{},"execution_count":58},{"output_type":"display_data","data":{"text/plain":["<Figure size 2000x2000 with 4 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"gzAo8L5ybDs7","colab":{"base_uri":"https://localhost:8080/","height":859},"executionInfo":{"status":"ok","timestamp":1694601430072,"user_tz":-180,"elapsed":10,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"6c2fa919-091e-4ae4-9485-b42aa728a154"},"source":["\n","# KDE (Kernel Density Estimate) is used for visualizing the Probability Density of a continuous variable.\n","# KDE describes the probability density at different values in a continuous variable.\n","\n","plt.figure(figsize=(12,7))\n","\n","sns.kdeplot(left_df['DistanceFromHome'], label = 'Employees who left', shade = True, color = 'r')\n","sns.kdeplot(stayed_df['DistanceFromHome'], label = 'Employees who Stayed', shade = True, color = 'b')\n","\n","plt.xlabel('Distance From Home')\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-59-b4e7562b9d85>:6: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(left_df['DistanceFromHome'], label = 'Employees who left', shade = True, color = 'r')\n","<ipython-input-59-b4e7562b9d85>:7: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(stayed_df['DistanceFromHome'], label = 'Employees who Stayed', shade = True, color = 'b')\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Distance From Home')"]},"metadata":{},"execution_count":59},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"U0cw6asrgZFh","colab":{"base_uri":"https://localhost:8080/","height":859},"executionInfo":{"status":"ok","timestamp":1694601433733,"user_tz":-180,"elapsed":1012,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"12d12fac-c4a7-400b-9da6-b12fb3b8984c"},"source":["plt.figure(figsize=(12,7))\n","\n","sns.kdeplot(left_df['YearsWithCurrManager'], label = 'Employees who left', shade = True, color = 'r')\n","sns.kdeplot(stayed_df['YearsWithCurrManager'], label = 'Employees who Stayed', shade = True, color = 'b')\n","\n","plt.xlabel('Years With Current Manager')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-60-7c4521cc0916>:3: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(left_df['YearsWithCurrManager'], label = 'Employees who left', shade = True, color = 'r')\n","<ipython-input-60-7c4521cc0916>:4: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(stayed_df['YearsWithCurrManager'], label = 'Employees who Stayed', shade = True, color = 'b')\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Years With Current Manager')"]},"metadata":{},"execution_count":60},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"fQDpsZXqfygG","colab":{"base_uri":"https://localhost:8080/","height":859},"executionInfo":{"status":"ok","timestamp":1694601435209,"user_tz":-180,"elapsed":633,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"63463907-d700-4686-fcd8-7ca81174ba07"},"source":["plt.figure(figsize=(12,7))\n","\n","sns.kdeplot(left_df['TotalWorkingYears'], shade = True, label = 'Employees who left', color = 'r')\n","sns.kdeplot(stayed_df['TotalWorkingYears'], shade = True, label = 'Employees who Stayed', color = 'b')\n","\n","plt.xlabel('Total Working Years')\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-61-c3af2d1ec013>:3: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(left_df['TotalWorkingYears'], shade = True, label = 'Employees who left', color = 'r')\n","<ipython-input-61-c3af2d1ec013>:4: FutureWarning: \n","\n","`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n","This will become an error in seaborn v0.14.0; please update your code.\n","\n","  sns.kdeplot(stayed_df['TotalWorkingYears'], shade = True, label = 'Employees who Stayed', color = 'b')\n"]},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Total Working Years')"]},"metadata":{},"execution_count":61},{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"d-iOYim7Pcpr","colab":{"base_uri":"https://localhost:8080/","height":868},"executionInfo":{"status":"ok","timestamp":1694601437707,"user_tz":-180,"elapsed":871,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"566e2e2d-a175-4e14-e918-b4e23d97ea66"},"source":["# the Gender vs. Monthly Income\n","plt.figure(figsize=(15, 10))\n","sns.boxplot(x = 'MonthlyIncome', y = 'Gender', data = employee_df)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='MonthlyIncome', ylabel='Gender'>"]},"metadata":{},"execution_count":62},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"Dsd9DB9rby-3","colab":{"base_uri":"https://localhost:8080/","height":868},"executionInfo":{"status":"ok","timestamp":1694601439569,"user_tz":-180,"elapsed":444,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"9fb9342e-9853-44b0-b07c-a1de7405e6dc"},"source":["# the monthly income vs. job role\n","plt.figure(figsize=(15, 10))\n","sns.boxplot(x = 'MonthlyIncome', y = 'JobRole', data = employee_df)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='MonthlyIncome', ylabel='JobRole'>"]},"metadata":{},"execution_count":63},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1000 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"Y0GmpAjG3GiH"},"source":["# Creating testing and trainig dataset & data cleaning"]},{"cell_type":"code","metadata":{"id":"FK5ggiVPsJE9","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1694601442401,"user_tz":-180,"elapsed":290,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"eef0f21d-af17-4ba8-8cce-69dca0a6cc1d"},"source":["X_cat = employee_df[['BusinessTravel', 'Department', 'EducationField', 'Gender', 'JobRole', 'MaritalStatus']]\n","X_cat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["         BusinessTravel              Department EducationField  Gender  \\\n","0         Travel_Rarely                   Sales  Life Sciences  Female   \n","1     Travel_Frequently  Research & Development  Life Sciences    Male   \n","2         Travel_Rarely  Research & Development          Other    Male   \n","3     Travel_Frequently  Research & Development  Life Sciences  Female   \n","4         Travel_Rarely  Research & Development        Medical    Male   \n","...                 ...                     ...            ...     ...   \n","1465  Travel_Frequently  Research & Development        Medical    Male   \n","1466      Travel_Rarely  Research & Development        Medical    Male   \n","1467      Travel_Rarely  Research & Development  Life Sciences    Male   \n","1468  Travel_Frequently                   Sales        Medical    Male   \n","1469      Travel_Rarely  Research & Development        Medical    Male   \n","\n","                        JobRole MaritalStatus  \n","0               Sales Executive        Single  \n","1            Research Scientist       Married  \n","2         Laboratory Technician        Single  \n","3            Research Scientist       Married  \n","4         Laboratory Technician       Married  \n","...                         ...           ...  \n","1465      Laboratory Technician       Married  \n","1466  Healthcare Representative       Married  \n","1467     Manufacturing Director       Married  \n","1468            Sales Executive       Married  \n","1469      Laboratory Technician       Married  \n","\n","[1470 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-53dbd9aa-74d4-44a4-8430-79df398b7c4b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BusinessTravel</th>\n","      <th>Department</th>\n","      <th>EducationField</th>\n","      <th>Gender</th>\n","      <th>JobRole</th>\n","      <th>MaritalStatus</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Travel_Rarely</td>\n","      <td>Sales</td>\n","      <td>Life Sciences</td>\n","      <td>Female</td>\n","      <td>Sales Executive</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Travel_Frequently</td>\n","      <td>Research &amp; Development</td>\n","      <td>Life Sciences</td>\n","      <td>Male</td>\n","      <td>Research Scientist</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Travel_Rarely</td>\n","      <td>Research &amp; Development</td>\n","      <td>Other</td>\n","      <td>Male</td>\n","      <td>Laboratory Technician</td>\n","      <td>Single</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Travel_Frequently</td>\n","      <td>Research &amp; Development</td>\n","      <td>Life Sciences</td>\n","      <td>Female</td>\n","      <td>Research Scientist</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Travel_Rarely</td>\n","      <td>Research &amp; Development</td>\n","      <td>Medical</td>\n","      <td>Male</td>\n","      <td>Laboratory Technician</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>Travel_Frequently</td>\n","      <td>Research &amp; Development</td>\n","      <td>Medical</td>\n","      <td>Male</td>\n","      <td>Laboratory Technician</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>Travel_Rarely</td>\n","      <td>Research &amp; Development</td>\n","      <td>Medical</td>\n","      <td>Male</td>\n","      <td>Healthcare Representative</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>Travel_Rarely</td>\n","      <td>Research &amp; Development</td>\n","      <td>Life Sciences</td>\n","      <td>Male</td>\n","      <td>Manufacturing Director</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>Travel_Frequently</td>\n","      <td>Sales</td>\n","      <td>Medical</td>\n","      <td>Male</td>\n","      <td>Sales Executive</td>\n","      <td>Married</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>Travel_Rarely</td>\n","      <td>Research &amp; Development</td>\n","      <td>Medical</td>\n","      <td>Male</td>\n","      <td>Laboratory Technician</td>\n","      <td>Married</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-53dbd9aa-74d4-44a4-8430-79df398b7c4b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-53dbd9aa-74d4-44a4-8430-79df398b7c4b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-53dbd9aa-74d4-44a4-8430-79df398b7c4b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b3103871-fc5c-4963-a401-9d88394a7f1a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b3103871-fc5c-4963-a401-9d88394a7f1a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b3103871-fc5c-4963-a401-9d88394a7f1a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":64}]},{"cell_type":"code","metadata":{"id":"1_nb-D8H3cK-"},"source":["from sklearn.preprocessing import OneHotEncoder\n","onehotencoder = OneHotEncoder()\n","X_cat =onehotencoder.fit_transform(X_cat).toarray()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qwzY8rj0uV-a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694601447164,"user_tz":-180,"elapsed":281,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"0ae835ac-0e36-4ae0-db89-b6e115d10c5c"},"source":["X_cat.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1470, 26)"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","metadata":{"id":"dMjFQDQzucrh"},"source":["X_cat = pd.DataFrame(X_cat)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"nWRIDQWquc2m","colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"status":"ok","timestamp":1694601449629,"user_tz":-180,"elapsed":3,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"393aae82-bb35-4980-b04e-45017fedc823"},"source":["X_cat"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       0    1    2    3    4    5    6    7    8    9   ...   16   17   18  \\\n","0     0.0  0.0  1.0  0.0  0.0  1.0  0.0  1.0  0.0  0.0  ...  0.0  0.0  0.0   \n","1     0.0  1.0  0.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...  0.0  0.0  0.0   \n","2     0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  0.0  ...  1.0  0.0  0.0   \n","3     0.0  1.0  0.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...  0.0  0.0  0.0   \n","4     0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...  1.0  0.0  0.0   \n","...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n","1465  0.0  1.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...  1.0  0.0  0.0   \n","1466  0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...  0.0  0.0  0.0   \n","1467  0.0  0.0  1.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...  0.0  0.0  1.0   \n","1468  0.0  1.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  ...  0.0  0.0  0.0   \n","1469  0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...  1.0  0.0  0.0   \n","\n","       19   20   21   22   23   24   25  \n","0     0.0  0.0  1.0  0.0  0.0  0.0  1.0  \n","1     0.0  1.0  0.0  0.0  0.0  1.0  0.0  \n","2     0.0  0.0  0.0  0.0  0.0  0.0  1.0  \n","3     0.0  1.0  0.0  0.0  0.0  1.0  0.0  \n","4     0.0  0.0  0.0  0.0  0.0  1.0  0.0  \n","...   ...  ...  ...  ...  ...  ...  ...  \n","1465  0.0  0.0  0.0  0.0  0.0  1.0  0.0  \n","1466  0.0  0.0  0.0  0.0  0.0  1.0  0.0  \n","1467  0.0  0.0  0.0  0.0  0.0  1.0  0.0  \n","1468  0.0  0.0  1.0  0.0  0.0  1.0  0.0  \n","1469  0.0  0.0  0.0  0.0  0.0  1.0  0.0  \n","\n","[1470 rows x 26 columns]"],"text/html":["\n","  <div id=\"df-d7438067-ea71-4407-b41c-ff3e0db3ef9d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>16</th>\n","      <th>17</th>\n","      <th>18</th>\n","      <th>19</th>\n","      <th>20</th>\n","      <th>21</th>\n","      <th>22</th>\n","      <th>23</th>\n","      <th>24</th>\n","      <th>25</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 26 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7438067-ea71-4407-b41c-ff3e0db3ef9d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d7438067-ea71-4407-b41c-ff3e0db3ef9d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d7438067-ea71-4407-b41c-ff3e0db3ef9d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-734db745-1fad-4105-a650-3a5e66bce0d9\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-734db745-1fad-4105-a650-3a5e66bce0d9')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-734db745-1fad-4105-a650-3a5e66bce0d9 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":68}]},{"cell_type":"code","metadata":{"id":"3sc6kz_oucxq","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1694601464782,"user_tz":-180,"elapsed":290,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"89dfc157-ba9f-4955-8b7f-8cb7c96f91c9"},"source":["X_numerical = employee_df[['Age', 'DailyRate', 'DistanceFromHome',\t'Education', 'EnvironmentSatisfaction', 'HourlyRate', 'JobInvolvement',\t'JobLevel',\t'JobSatisfaction',\t'MonthlyIncome',\t'MonthlyRate',\t'NumCompaniesWorked',\t'OverTime',\t'PercentSalaryHike', 'PerformanceRating',\t'RelationshipSatisfaction',\t'StockOptionLevel',\t'TotalWorkingYears'\t,'TrainingTimesLastYear'\t, 'WorkLifeBalance',\t'YearsAtCompany'\t,'YearsInCurrentRole', 'YearsSinceLastPromotion',\t'YearsWithCurrManager']]\n","X_numerical\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Age  DailyRate  DistanceFromHome  Education  EnvironmentSatisfaction  \\\n","0      41       1102                 1          2                        2   \n","1      49        279                 8          1                        3   \n","2      37       1373                 2          2                        4   \n","3      33       1392                 3          4                        4   \n","4      27        591                 2          1                        1   \n","...   ...        ...               ...        ...                      ...   \n","1465   36        884                23          2                        3   \n","1466   39        613                 6          1                        4   \n","1467   27        155                 4          3                        2   \n","1468   49       1023                 2          3                        4   \n","1469   34        628                 8          3                        2   \n","\n","      HourlyRate  JobInvolvement  JobLevel  JobSatisfaction  MonthlyIncome  \\\n","0             94               3         2                4           5993   \n","1             61               2         2                2           5130   \n","2             92               2         1                3           2090   \n","3             56               3         1                3           2909   \n","4             40               3         1                2           3468   \n","...          ...             ...       ...              ...            ...   \n","1465          41               4         2                4           2571   \n","1466          42               2         3                1           9991   \n","1467          87               4         2                2           6142   \n","1468          63               2         2                2           5390   \n","1469          82               4         2                3           4404   \n","\n","      ...  PerformanceRating  RelationshipSatisfaction  StockOptionLevel  \\\n","0     ...                  3                         1                 0   \n","1     ...                  4                         4                 1   \n","2     ...                  3                         2                 0   \n","3     ...                  3                         3                 0   \n","4     ...                  3                         4                 1   \n","...   ...                ...                       ...               ...   \n","1465  ...                  3                         3                 1   \n","1466  ...                  3                         1                 1   \n","1467  ...                  4                         2                 1   \n","1468  ...                  3                         4                 0   \n","1469  ...                  3                         1                 0   \n","\n","      TotalWorkingYears  TrainingTimesLastYear  WorkLifeBalance  \\\n","0                     8                      0                1   \n","1                    10                      3                3   \n","2                     7                      3                3   \n","3                     8                      3                3   \n","4                     6                      3                3   \n","...                 ...                    ...              ...   \n","1465                 17                      3                3   \n","1466                  9                      5                3   \n","1467                  6                      0                3   \n","1468                 17                      3                2   \n","1469                  6                      3                4   \n","\n","      YearsAtCompany  YearsInCurrentRole  YearsSinceLastPromotion  \\\n","0                  6                   4                        0   \n","1                 10                   7                        1   \n","2                  0                   0                        0   \n","3                  8                   7                        3   \n","4                  2                   2                        2   \n","...              ...                 ...                      ...   \n","1465               5                   2                        0   \n","1466               7                   7                        1   \n","1467               6                   2                        0   \n","1468               9                   6                        0   \n","1469               4                   3                        1   \n","\n","      YearsWithCurrManager  \n","0                        5  \n","1                        7  \n","2                        0  \n","3                        0  \n","4                        2  \n","...                    ...  \n","1465                     3  \n","1466                     7  \n","1467                     3  \n","1468                     8  \n","1469                     2  \n","\n","[1470 rows x 24 columns]"],"text/html":["\n","  <div id=\"df-790c4ca0-f97c-4afd-a4b9-7e432c7c9ff6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Age</th>\n","      <th>DailyRate</th>\n","      <th>DistanceFromHome</th>\n","      <th>Education</th>\n","      <th>EnvironmentSatisfaction</th>\n","      <th>HourlyRate</th>\n","      <th>JobInvolvement</th>\n","      <th>JobLevel</th>\n","      <th>JobSatisfaction</th>\n","      <th>MonthlyIncome</th>\n","      <th>...</th>\n","      <th>PerformanceRating</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>41</td>\n","      <td>1102</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>94</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>5993</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>49</td>\n","      <td>279</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>61</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5130</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>37</td>\n","      <td>1373</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>92</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2090</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>33</td>\n","      <td>1392</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>56</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>2909</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>27</td>\n","      <td>591</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>40</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3468</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>36</td>\n","      <td>884</td>\n","      <td>23</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>41</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2571</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>39</td>\n","      <td>613</td>\n","      <td>6</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>42</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>9991</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>27</td>\n","      <td>155</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>87</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>6142</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>49</td>\n","      <td>1023</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>63</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>5390</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>34</td>\n","      <td>628</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>82</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>4404</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 24 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-790c4ca0-f97c-4afd-a4b9-7e432c7c9ff6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-790c4ca0-f97c-4afd-a4b9-7e432c7c9ff6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-790c4ca0-f97c-4afd-a4b9-7e432c7c9ff6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-635f7efa-f17f-4556-89d8-3f500316797d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-635f7efa-f17f-4556-89d8-3f500316797d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-635f7efa-f17f-4556-89d8-3f500316797d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","metadata":{"id":"7EucHJDH0wf0","colab":{"base_uri":"https://localhost:8080/","height":443},"executionInfo":{"status":"ok","timestamp":1694601469571,"user_tz":-180,"elapsed":278,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"1bbddf1a-99ea-431e-980f-8bba2650435b"},"source":["X_all = pd.concat([X_cat,X_numerical], axis = 1)\n","X_all"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        0    1    2    3    4    5    6    7    8    9  ...  \\\n","0     0.0  0.0  1.0  0.0  0.0  1.0  0.0  1.0  0.0  0.0  ...   \n","1     0.0  1.0  0.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...   \n","2     0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  0.0  ...   \n","3     0.0  1.0  0.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...   \n","4     0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...   \n","...   ...  ...  ...  ...  ...  ...  ...  ...  ...  ...  ...   \n","1465  0.0  1.0  0.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...   \n","1466  0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...   \n","1467  0.0  0.0  1.0  0.0  1.0  0.0  0.0  1.0  0.0  0.0  ...   \n","1468  0.0  1.0  0.0  0.0  0.0  1.0  0.0  0.0  0.0  1.0  ...   \n","1469  0.0  0.0  1.0  0.0  1.0  0.0  0.0  0.0  0.0  1.0  ...   \n","\n","      PerformanceRating  RelationshipSatisfaction  StockOptionLevel  \\\n","0                     3                         1                 0   \n","1                     4                         4                 1   \n","2                     3                         2                 0   \n","3                     3                         3                 0   \n","4                     3                         4                 1   \n","...                 ...                       ...               ...   \n","1465                  3                         3                 1   \n","1466                  3                         1                 1   \n","1467                  4                         2                 1   \n","1468                  3                         4                 0   \n","1469                  3                         1                 0   \n","\n","      TotalWorkingYears  TrainingTimesLastYear  WorkLifeBalance  \\\n","0                     8                      0                1   \n","1                    10                      3                3   \n","2                     7                      3                3   \n","3                     8                      3                3   \n","4                     6                      3                3   \n","...                 ...                    ...              ...   \n","1465                 17                      3                3   \n","1466                  9                      5                3   \n","1467                  6                      0                3   \n","1468                 17                      3                2   \n","1469                  6                      3                4   \n","\n","      YearsAtCompany  YearsInCurrentRole  YearsSinceLastPromotion  \\\n","0                  6                   4                        0   \n","1                 10                   7                        1   \n","2                  0                   0                        0   \n","3                  8                   7                        3   \n","4                  2                   2                        2   \n","...              ...                 ...                      ...   \n","1465               5                   2                        0   \n","1466               7                   7                        1   \n","1467               6                   2                        0   \n","1468               9                   6                        0   \n","1469               4                   3                        1   \n","\n","      YearsWithCurrManager  \n","0                        5  \n","1                        7  \n","2                        0  \n","3                        0  \n","4                        2  \n","...                    ...  \n","1465                     3  \n","1466                     7  \n","1467                     3  \n","1468                     8  \n","1469                     2  \n","\n","[1470 rows x 50 columns]"],"text/html":["\n","  <div id=\"df-df105322-dc68-4ab9-8254-dd074903a7c6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","      <th>...</th>\n","      <th>PerformanceRating</th>\n","      <th>RelationshipSatisfaction</th>\n","      <th>StockOptionLevel</th>\n","      <th>TotalWorkingYears</th>\n","      <th>TrainingTimesLastYear</th>\n","      <th>WorkLifeBalance</th>\n","      <th>YearsAtCompany</th>\n","      <th>YearsInCurrentRole</th>\n","      <th>YearsSinceLastPromotion</th>\n","      <th>YearsWithCurrManager</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>10</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>8</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>7</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1465</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1466</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>1</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>1467</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>...</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>6</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1468</th>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>17</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>8</td>\n","    </tr>\n","    <tr>\n","      <th>1469</th>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1.0</td>\n","      <td>...</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1470 rows × 50 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-df105322-dc68-4ab9-8254-dd074903a7c6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-df105322-dc68-4ab9-8254-dd074903a7c6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-df105322-dc68-4ab9-8254-dd074903a7c6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-90836629-8e4b-40f0-869e-03163b04565f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-90836629-8e4b-40f0-869e-03163b04565f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-90836629-8e4b-40f0-869e-03163b04565f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":70}]},{"cell_type":"code","metadata":{"id":"uZxWTuLp0wdW"},"source":["from sklearn.preprocessing import MinMaxScaler\n","scaler = MinMaxScaler()\n","X = scaler.fit_transform(X_all.values)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Wf_G8A_G1l2c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694601549755,"user_tz":-180,"elapsed":284,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"42e33098-2f30-424b-fbbf-4deeea7846a8"},"source":["X"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[0.        , 0.        , 1.        , ..., 0.22222222, 0.        ,\n","        0.29411765],\n","       [0.        , 1.        , 0.        , ..., 0.38888889, 0.06666667,\n","        0.41176471],\n","       [0.        , 0.        , 1.        , ..., 0.        , 0.        ,\n","        0.        ],\n","       ...,\n","       [0.        , 0.        , 1.        , ..., 0.11111111, 0.        ,\n","        0.17647059],\n","       [0.        , 1.        , 0.        , ..., 0.33333333, 0.        ,\n","        0.47058824],\n","       [0.        , 0.        , 1.        , ..., 0.16666667, 0.06666667,\n","        0.11764706]])"]},"metadata":{},"execution_count":73}]},{"cell_type":"code","metadata":{"id":"ASEus5N81Zq8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694601558038,"user_tz":-180,"elapsed":289,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"f61c3408-4712-4a55-8cc7-fd065f2c0184"},"source":["y = employee_df['Attrition']\n","y"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       1\n","1       0\n","2       1\n","3       0\n","4       0\n","       ..\n","1465    0\n","1466    0\n","1467    0\n","1468    0\n","1469    0\n","Name: Attrition, Length: 1470, dtype: int64"]},"metadata":{},"execution_count":74}]},{"cell_type":"markdown","metadata":{"id":"otudfveOME9P"},"source":["\n","#  Training  and evaluating a logistic regression classifer"]},{"cell_type":"code","metadata":{"id":"RgFq3h993cIz"},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DqIp8uvJ3cGi","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694607722087,"user_tz":-180,"elapsed":301,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"d3cb2163-6815-4ca4-e132-c0310399477f"},"source":["X_train.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(1102, 50)"]},"metadata":{},"execution_count":76}]},{"cell_type":"code","metadata":{"id":"d4wfApza3cEc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694607729843,"user_tz":-180,"elapsed":296,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"0422e843-5c70-40a8-f708-e9d205a4550b"},"source":["X_test.shape"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(368, 50)"]},"metadata":{},"execution_count":77}]},{"cell_type":"code","metadata":{"id":"f-yF03L-MMz0"},"source":["from sklearn.linear_model import LogisticRegression\n","from sklearn.metrics import accuracy_score"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jDj4uNvjNWkK","colab":{"base_uri":"https://localhost:8080/","height":75},"executionInfo":{"status":"ok","timestamp":1694607877937,"user_tz":-180,"elapsed":412,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"da5f021b-785b-4b58-8c2b-b00aa1fb27ac"},"source":["model = LogisticRegression()\n","model.fit(X_train, y_train)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LogisticRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":79}]},{"cell_type":"code","metadata":{"id":"7mlqam98MgCG"},"source":["y_pred = model.predict(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OSfFqmKHNuJe","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694607934152,"user_tz":-180,"elapsed":306,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"b5229166-7d80-4eb0-e616-396c62451119"},"source":["# Testing Set Performance\n","y_pred"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1])"]},"metadata":{},"execution_count":81}]},{"cell_type":"code","metadata":{"id":"tussFqBMNxZX","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694608060547,"user_tz":-180,"elapsed":317,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"63016bac-a4e6-4e2e-9a31-250db8ea423d"},"source":["from sklearn.metrics import classification_report, confusion_matrix\n","\n","print('Accuracy {} %'.format(100 * accuracy_score(y_pred, y_test)))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy 89.13043478260869 %\n"]}]},{"cell_type":"code","source":["cm = confusion_matrix(y_pred, y_test)\n","sns.heatmap(cm, annot = True)"],"metadata":{"id":"sshMALZjgwA4","executionInfo":{"status":"ok","timestamp":1694608109264,"user_tz":-180,"elapsed":1008,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"6c02fba2-632f-4090-ebb1-2620b5565925","colab":{"base_uri":"https://localhost:8080/","height":453}},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":83},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["print(classification_report(y_pred, y_test))"],"metadata":{"id":"oQhzjPDVg8w2","executionInfo":{"status":"ok","timestamp":1694608135916,"user_tz":-180,"elapsed":2,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"db7c2296-9aa7-4d3a-cde0-3e27969a5084","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.99      0.89      0.94       336\n","           1       0.44      0.88      0.58        32\n","\n","    accuracy                           0.89       368\n","   macro avg       0.71      0.88      0.76       368\n","weighted avg       0.94      0.89      0.91       368\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"o0LevjwDP3Zk"},"source":["# Training and Evaluating Ramdom Forest Classifer"]},{"cell_type":"code","metadata":{"id":"A9CInUwvP9nF","colab":{"base_uri":"https://localhost:8080/","height":75},"executionInfo":{"status":"ok","timestamp":1694608391398,"user_tz":-180,"elapsed":688,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"5a0ffb3b-84f8-4950-a95a-9fd2a3be7554"},"source":["from sklearn.ensemble import RandomForestClassifier\n","\n","model = RandomForestClassifier()\n","model.fit(X_train, y_train)\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestClassifier()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestClassifier</label><div class=\"sk-toggleable__content\"><pre>RandomForestClassifier()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":85}]},{"cell_type":"code","metadata":{"id":"X5x0CZkgQSsY","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694608473470,"user_tz":-180,"elapsed":284,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"1173d21f-4a3f-4590-cb13-f0d13b8eeae2"},"source":["y_pred = model.predict(X_test)\n","y_pred"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":90}]},{"cell_type":"code","metadata":{"id":"_uEjeW4-QU36","colab":{"base_uri":"https://localhost:8080/","height":451},"executionInfo":{"status":"ok","timestamp":1694608475793,"user_tz":-180,"elapsed":873,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"5542157c-747a-40fe-fb8e-d6cd89beaa3c"},"source":["# Testing Set Performance\n","cm = confusion_matrix(y_pred, y_test)\n","sns.heatmap(cm, annot=True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":91},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"Puv35JH6QxFt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694608516693,"user_tz":-180,"elapsed":284,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"c36ad40d-851f-4575-e74b-147e9e040f1c"},"source":["print(classification_report(y_pred, y_test))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.99      0.85      0.91       357\n","           1       0.14      0.82      0.24        11\n","\n","    accuracy                           0.85       368\n","   macro avg       0.57      0.83      0.58       368\n","weighted avg       0.97      0.85      0.89       368\n","\n"]}]},{"cell_type":"markdown","metadata":{"id":"53qDZFRn3-S1"},"source":["# Training and evaluating a deep learning model"]},{"cell_type":"code","metadata":{"id":"cilnKfMv1wP1"},"source":["import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Yl6fmPJj3cCX"},"source":["model =tf.keras.models.Sequential()\n","\n","model.add(tf.keras.layers.Dense(units = 500, activation = 'relu', input_shape = (50, )))\n","model.add(tf.keras.layers.Dense(units = 500, activation = 'relu'))\n","model.add(tf.keras.layers.Dense(units = 500, activation = 'relu'))\n","model.add(tf.keras.layers.Dense(units = 1, activation = 'sigmoid'))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"GUd71odB4v-i","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694610309211,"user_tz":-180,"elapsed":293,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"3c8c937d-bae6-400e-9fc3-ad15be244a5f"},"source":["model.summary()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_4\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," dense_19 (Dense)            (None, 500)               25500     \n","                                                                 \n"," dense_20 (Dense)            (None, 500)               250500    \n","                                                                 \n"," dense_21 (Dense)            (None, 500)               250500    \n","                                                                 \n"," dense_22 (Dense)            (None, 1)                 501       \n","                                                                 \n","=================================================================\n","Total params: 527001 (2.01 MB)\n","Trainable params: 527001 (2.01 MB)\n","Non-trainable params: 0 (0.00 Byte)\n","_________________________________________________________________\n"]}]},{"cell_type":"code","metadata":{"id":"BYmvNpNw5Act"},"source":["model.compile(optimizer = 'Adam', loss = 'binary_crossentropy', metrics = ['accuracy'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","source":["epochs_hist= model.fit(X_train, y_train, epochs = 100, batch_size = 50 )"],"metadata":{"id":"caJovEhxnuJp","executionInfo":{"status":"ok","timestamp":1694610353975,"user_tz":-180,"elapsed":42356,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"1cb82120-b5f0-4024-c60e-1eb4282723d6","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","23/23 [==============================] - 1s 11ms/step - loss: 0.4255 - accuracy: 0.8294\n","Epoch 2/100\n","23/23 [==============================] - 0s 13ms/step - loss: 0.3285 - accuracy: 0.8693\n","Epoch 3/100\n","23/23 [==============================] - 0s 13ms/step - loss: 0.2865 - accuracy: 0.8911\n","Epoch 4/100\n","23/23 [==============================] - 0s 12ms/step - loss: 0.2524 - accuracy: 0.8993\n","Epoch 5/100\n","23/23 [==============================] - 0s 12ms/step - loss: 0.2208 - accuracy: 0.9174\n","Epoch 6/100\n","23/23 [==============================] - 0s 15ms/step - loss: 0.2375 - accuracy: 0.9056\n","Epoch 7/100\n","23/23 [==============================] - 0s 14ms/step - loss: 0.1863 - accuracy: 0.9374\n","Epoch 8/100\n","23/23 [==============================] - 0s 13ms/step - loss: 0.1416 - accuracy: 0.9528\n","Epoch 9/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.1037 - accuracy: 0.9646\n","Epoch 10/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.1687 - accuracy: 0.9383\n","Epoch 11/100\n","23/23 [==============================] - 0s 12ms/step - loss: 0.1055 - accuracy: 0.9583\n","Epoch 12/100\n","23/23 [==============================] - 0s 12ms/step - loss: 0.0620 - accuracy: 0.9764\n","Epoch 13/100\n","23/23 [==============================] - 0s 12ms/step - loss: 0.0350 - accuracy: 0.9891\n","Epoch 14/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.0284 - accuracy: 0.9918\n","Epoch 15/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.0153 - accuracy: 0.9982\n","Epoch 16/100\n","23/23 [==============================] - 0s 10ms/step - loss: 0.0061 - accuracy: 1.0000\n","Epoch 17/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.0028 - accuracy: 1.0000\n","Epoch 18/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.0014 - accuracy: 1.0000\n","Epoch 19/100\n","23/23 [==============================] - 0s 11ms/step - loss: 0.0010 - accuracy: 1.0000\n","Epoch 20/100\n","23/23 [==============================] - 0s 11ms/step - loss: 7.8344e-04 - accuracy: 1.0000\n","Epoch 21/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.7217e-04 - accuracy: 1.0000\n","Epoch 22/100\n","23/23 [==============================] - 0s 11ms/step - loss: 4.7334e-04 - accuracy: 1.0000\n","Epoch 23/100\n","23/23 [==============================] - 0s 11ms/step - loss: 4.0506e-04 - accuracy: 1.0000\n","Epoch 24/100\n","23/23 [==============================] - 0s 10ms/step - loss: 3.4169e-04 - accuracy: 1.0000\n","Epoch 25/100\n","23/23 [==============================] - 0s 11ms/step - loss: 2.9882e-04 - accuracy: 1.0000\n","Epoch 26/100\n","23/23 [==============================] - 0s 10ms/step - loss: 2.6959e-04 - accuracy: 1.0000\n","Epoch 27/100\n","23/23 [==============================] - 0s 11ms/step - loss: 2.4034e-04 - accuracy: 1.0000\n","Epoch 28/100\n","23/23 [==============================] - 0s 17ms/step - loss: 2.0430e-04 - accuracy: 1.0000\n","Epoch 29/100\n","23/23 [==============================] - 0s 16ms/step - loss: 1.7804e-04 - accuracy: 1.0000\n","Epoch 30/100\n","23/23 [==============================] - 0s 17ms/step - loss: 1.6152e-04 - accuracy: 1.0000\n","Epoch 31/100\n","23/23 [==============================] - 0s 16ms/step - loss: 1.5268e-04 - accuracy: 1.0000\n","Epoch 32/100\n","23/23 [==============================] - 0s 16ms/step - loss: 1.3916e-04 - accuracy: 1.0000\n","Epoch 33/100\n","23/23 [==============================] - 0s 19ms/step - loss: 1.1999e-04 - accuracy: 1.0000\n","Epoch 34/100\n","23/23 [==============================] - 0s 19ms/step - loss: 1.0816e-04 - accuracy: 1.0000\n","Epoch 35/100\n","23/23 [==============================] - 1s 47ms/step - loss: 9.8625e-05 - accuracy: 1.0000\n","Epoch 36/100\n","23/23 [==============================] - 0s 18ms/step - loss: 9.0848e-05 - accuracy: 1.0000\n","Epoch 37/100\n","23/23 [==============================] - 0s 21ms/step - loss: 8.5117e-05 - accuracy: 1.0000\n","Epoch 38/100\n","23/23 [==============================] - 0s 14ms/step - loss: 7.7958e-05 - accuracy: 1.0000\n","Epoch 39/100\n","23/23 [==============================] - 0s 14ms/step - loss: 7.1630e-05 - accuracy: 1.0000\n","Epoch 40/100\n","23/23 [==============================] - 0s 14ms/step - loss: 6.6658e-05 - accuracy: 1.0000\n","Epoch 41/100\n","23/23 [==============================] - 0s 13ms/step - loss: 6.3682e-05 - accuracy: 1.0000\n","Epoch 42/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.8247e-05 - accuracy: 1.0000\n","Epoch 43/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.4370e-05 - accuracy: 1.0000\n","Epoch 44/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.1362e-05 - accuracy: 1.0000\n","Epoch 45/100\n","23/23 [==============================] - 0s 12ms/step - loss: 4.8872e-05 - accuracy: 1.0000\n","Epoch 46/100\n","23/23 [==============================] - 0s 14ms/step - loss: 4.6086e-05 - accuracy: 1.0000\n","Epoch 47/100\n","23/23 [==============================] - 0s 14ms/step - loss: 4.1647e-05 - accuracy: 1.0000\n","Epoch 48/100\n","23/23 [==============================] - 0s 13ms/step - loss: 4.0057e-05 - accuracy: 1.0000\n","Epoch 49/100\n","23/23 [==============================] - 0s 11ms/step - loss: 3.6699e-05 - accuracy: 1.0000\n","Epoch 50/100\n","23/23 [==============================] - 0s 11ms/step - loss: 3.4304e-05 - accuracy: 1.0000\n","Epoch 51/100\n","23/23 [==============================] - 0s 11ms/step - loss: 3.2322e-05 - accuracy: 1.0000\n","Epoch 52/100\n","23/23 [==============================] - 0s 11ms/step - loss: 3.0406e-05 - accuracy: 1.0000\n","Epoch 53/100\n","23/23 [==============================] - 0s 11ms/step - loss: 2.8938e-05 - accuracy: 1.0000\n","Epoch 54/100\n","23/23 [==============================] - 0s 11ms/step - loss: 2.7698e-05 - accuracy: 1.0000\n","Epoch 55/100\n","23/23 [==============================] - 0s 10ms/step - loss: 2.5885e-05 - accuracy: 1.0000\n","Epoch 56/100\n","23/23 [==============================] - 0s 13ms/step - loss: 2.4298e-05 - accuracy: 1.0000\n","Epoch 57/100\n","23/23 [==============================] - 0s 14ms/step - loss: 2.2954e-05 - accuracy: 1.0000\n","Epoch 58/100\n","23/23 [==============================] - 0s 14ms/step - loss: 2.1914e-05 - accuracy: 1.0000\n","Epoch 59/100\n","23/23 [==============================] - 0s 14ms/step - loss: 2.0667e-05 - accuracy: 1.0000\n","Epoch 60/100\n","23/23 [==============================] - 0s 11ms/step - loss: 2.0085e-05 - accuracy: 1.0000\n","Epoch 61/100\n","23/23 [==============================] - 0s 12ms/step - loss: 1.8822e-05 - accuracy: 1.0000\n","Epoch 62/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.7711e-05 - accuracy: 1.0000\n","Epoch 63/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.6858e-05 - accuracy: 1.0000\n","Epoch 64/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.6317e-05 - accuracy: 1.0000\n","Epoch 65/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.5672e-05 - accuracy: 1.0000\n","Epoch 66/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.4573e-05 - accuracy: 1.0000\n","Epoch 67/100\n","23/23 [==============================] - 0s 12ms/step - loss: 1.4005e-05 - accuracy: 1.0000\n","Epoch 68/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.3390e-05 - accuracy: 1.0000\n","Epoch 69/100\n","23/23 [==============================] - 0s 10ms/step - loss: 1.2863e-05 - accuracy: 1.0000\n","Epoch 70/100\n","23/23 [==============================] - 0s 10ms/step - loss: 1.2236e-05 - accuracy: 1.0000\n","Epoch 71/100\n","23/23 [==============================] - 0s 12ms/step - loss: 1.1733e-05 - accuracy: 1.0000\n","Epoch 72/100\n","23/23 [==============================] - 0s 11ms/step - loss: 1.1406e-05 - accuracy: 1.0000\n","Epoch 73/100\n","23/23 [==============================] - 0s 14ms/step - loss: 1.0872e-05 - accuracy: 1.0000\n","Epoch 74/100\n","23/23 [==============================] - 0s 16ms/step - loss: 1.0388e-05 - accuracy: 1.0000\n","Epoch 75/100\n","23/23 [==============================] - 0s 16ms/step - loss: 9.8542e-06 - accuracy: 1.0000\n","Epoch 76/100\n","23/23 [==============================] - 0s 17ms/step - loss: 9.6146e-06 - accuracy: 1.0000\n","Epoch 77/100\n","23/23 [==============================] - 0s 18ms/step - loss: 9.0373e-06 - accuracy: 1.0000\n","Epoch 78/100\n","23/23 [==============================] - 0s 16ms/step - loss: 8.6670e-06 - accuracy: 1.0000\n","Epoch 79/100\n","23/23 [==============================] - 0s 15ms/step - loss: 8.4167e-06 - accuracy: 1.0000\n","Epoch 80/100\n","23/23 [==============================] - 0s 19ms/step - loss: 8.0951e-06 - accuracy: 1.0000\n","Epoch 81/100\n","23/23 [==============================] - 0s 18ms/step - loss: 8.0517e-06 - accuracy: 1.0000\n","Epoch 82/100\n","23/23 [==============================] - 0s 20ms/step - loss: 8.0043e-06 - accuracy: 1.0000\n","Epoch 83/100\n","23/23 [==============================] - 0s 19ms/step - loss: 7.3042e-06 - accuracy: 1.0000\n","Epoch 84/100\n","23/23 [==============================] - 0s 14ms/step - loss: 7.0264e-06 - accuracy: 1.0000\n","Epoch 85/100\n","23/23 [==============================] - 0s 11ms/step - loss: 6.7359e-06 - accuracy: 1.0000\n","Epoch 86/100\n","23/23 [==============================] - 0s 11ms/step - loss: 6.4916e-06 - accuracy: 1.0000\n","Epoch 87/100\n","23/23 [==============================] - 0s 10ms/step - loss: 6.2275e-06 - accuracy: 1.0000\n","Epoch 88/100\n","23/23 [==============================] - 0s 11ms/step - loss: 6.0034e-06 - accuracy: 1.0000\n","Epoch 89/100\n","23/23 [==============================] - 0s 10ms/step - loss: 5.7798e-06 - accuracy: 1.0000\n","Epoch 90/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.5104e-06 - accuracy: 1.0000\n","Epoch 91/100\n","23/23 [==============================] - 0s 10ms/step - loss: 5.3129e-06 - accuracy: 1.0000\n","Epoch 92/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.1637e-06 - accuracy: 1.0000\n","Epoch 93/100\n","23/23 [==============================] - 0s 11ms/step - loss: 5.0441e-06 - accuracy: 1.0000\n","Epoch 94/100\n","23/23 [==============================] - 0s 11ms/step - loss: 6.2082e-06 - accuracy: 1.0000\n","Epoch 95/100\n","23/23 [==============================] - 0s 10ms/step - loss: 4.9296e-06 - accuracy: 1.0000\n","Epoch 96/100\n","23/23 [==============================] - 0s 11ms/step - loss: 4.5512e-06 - accuracy: 1.0000\n","Epoch 97/100\n","23/23 [==============================] - 0s 13ms/step - loss: 4.3452e-06 - accuracy: 1.0000\n","Epoch 98/100\n","23/23 [==============================] - 0s 14ms/step - loss: 4.2120e-06 - accuracy: 1.0000\n","Epoch 99/100\n","23/23 [==============================] - 0s 13ms/step - loss: 4.3928e-06 - accuracy: 1.0000\n","Epoch 100/100\n","23/23 [==============================] - 0s 13ms/step - loss: 3.9845e-06 - accuracy: 1.0000\n"]}]},{"cell_type":"code","metadata":{"id":"tpia0VBS5Ljw","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694610407646,"user_tz":-180,"elapsed":262,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"7e36756a-65fc-47a0-f383-5f5c1baaa520"},"source":["# oversampler = SMOTE(random_state=0)\n","# smote_train, smote_target = oversampler.fit_sample(X_train, y_train)\n","# epochs_hist = model.fit(smote_train, smote_target, epochs = 100, batch_size = 50)\n","y_pred = model.predict(X_test)\n","y_pred = (y_pred>0.5)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["12/12 [==============================] - 0s 4ms/step\n"]}]},{"cell_type":"code","metadata":{"id":"dS0rE8aoUO05","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694610414730,"user_tz":-180,"elapsed":272,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"3401d70c-eef7-4ca4-b4ad-4f246f7ad7b2"},"source":["y_pred\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [ True],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [False],\n","       [False],\n","       [ True],\n","       [False],\n","       [ True]])"]},"metadata":{},"execution_count":121}]},{"cell_type":"code","metadata":{"id":"k4PYwm6R25r6","colab":{"base_uri":"https://localhost:8080/","height":490},"executionInfo":{"status":"ok","timestamp":1694611354560,"user_tz":-180,"elapsed":1187,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"07c9238d-9e36-4a16-fd72-38b26888a20c"},"source":["plt.plot(epochs_hist.history['loss'])\n","plt.title('Model Loss Progressing During Training')\n","plt.xlabel('Epochs')\n","plt.ylabel('Training Loss')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0, 0.5, 'Training Loss')"]},"metadata":{},"execution_count":124},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"AfQ5pPAS3CQF","colab":{"base_uri":"https://localhost:8080/","height":448},"executionInfo":{"status":"ok","timestamp":1694611417146,"user_tz":-180,"elapsed":992,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"4df40470-43f3-4b7c-ae2a-f844aa39c57c"},"source":["cm = confusion_matrix(y_pred, y_test)\n","sns.heatmap(cm, annot = True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":125},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"id":"eXiDop_l5erJ","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1694611456719,"user_tz":-180,"elapsed":450,"user":{"displayName":"Elif Tansu Sunar","userId":"08405971676958221805"}},"outputId":"2b0d9dd9-a7d2-4e23-ad55-26be807c7109"},"source":["print(classification_report(y_test, y_pred))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","           0       0.87      0.95      0.91       304\n","           1       0.57      0.33      0.42        64\n","\n","    accuracy                           0.84       368\n","   macro avg       0.72      0.64      0.66       368\n","weighted avg       0.82      0.84      0.82       368\n","\n"]}]}]}